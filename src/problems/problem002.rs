/** https://projecteuler.net/problem=2
*    Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
*        1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
*    By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/

pub fn solve(num: i32 ) -> i32 {
    let mut sum = 0;
    for i in 1..num -1 {
        let result = fibonacci(i);
        if result > 4000000 {
            return sum;
        }
        if result % 2 == 0 {
        sum += result;
        }
    }
    return sum;
}

fn fibonacci(term: i32) -> i32 {
    if term == 0 || term == 1 {
        return term + 1;
    }
    return fibonacci(term - 1) + fibonacci(term - 2);
}

#[cfg(test)]
mod tests {
    use crate::problems::problem002;
    #[test]
    fn solve10() {
        assert_eq!(problem002::solve(10), 44);
    }
    #[test]
    fn solve33() {
        assert_eq!(problem002::solve(33), 4613732);
    }
}